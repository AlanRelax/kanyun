#!/usr/bin/env python
# vim: tabstop=4 shiftwidth=4 softtabstop=4
#
# Copyright 2012 Sina Corporation
# All Rights Reserved.
# Author: YuWei Peng <pengyuwei@gmail.com>
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

import sys
import time
import ConfigParser
import json
from collections import OrderedDict

from kanyun.worker.worker import *
from kanyun.worker.plugin_traffic_accounting import *
from kanyun.worker import plugin_agent

def show_usage():
    print "usage:"
    print "\tkanyun <param> [option]"
    print "\t  -n   : list network traffic, option=time-interval"
    print "\t  -vm  : list virtualmachine info, option=time-interval"

def vm(interval=60):
    while True:
        info = plugin_agent.plugin_call()
        if not info is None and len(info) > 0:
            print info
        time.sleep(interval)
    
def network(interval=60):
    while True:
        for k, info in get_traffic_accounting_info().iteritems():
            print k, info

        time.sleep(interval)

def main():
    if len(sys.argv) == 1:
        show_usage()
        return
    if len(sys.argv) == 2:
        if sys.argv[1] in ['--help', "-h", "?"]:
            show_usage()
            return
    
    if len(sys.argv) == 2:
        if sys.argv[1] == '-n':
            network(interval=60)
            return
    if sys.argv[1] == '-vm':
            vm(interval=60)
            return
            
    elif len(sys.argv) == 3:
        option = sys.argv[2]
        if sys.argv[1] == '-n':
            network(interval=int(option))
            return
        if sys.argv[1] == '-vm':
            vm(interval=int(option))
            return
        else:
            return
    else:
        pass
    
if __name__ == '__main__':
    main()
